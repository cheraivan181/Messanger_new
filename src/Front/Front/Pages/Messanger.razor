@page "/messanger"
@inject ISessionService _sessionService
@inject IConnectorService _connectorService

@using Front.Services.Interfaces.Sessions
@using Front.Services.Interfaces.WebSocket


<p>Enter a dialog</p>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p>@ErrorMessage</p>
}


@code {

    private string ErrorMessage { get; set; }


    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        bool isNeedCreateSession = await _sessionService.IsNeedCreateSessionAsync();
        if (isNeedCreateSession)
        {
            var createSessionResult = await _sessionService.CreateSessionService();
            if (!createSessionResult)
            {
                ErrorMessage = "Server error. Try later";
            }
        }

        await _connectorService.InitConnectionAsync();
    }
}
