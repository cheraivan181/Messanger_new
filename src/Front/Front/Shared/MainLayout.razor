@using Front.Clients.Interfaces
@using Front.ClientsDomain.Responses.Dialog
@using Front.ClientsDomain.Responses.Search
@using Front.Services.Interfaces.Auth
@using Front.Services.Interfaces.Dialogs
@inherits LayoutComponentBase

@inject IDialogManagerService _dialogManagerService;
@inject ISearchClient _searchClient;
@inject AuthenticationStateProvider _authStateProvider;
@inject NavigationManager _navigationManager;

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<AuthorizeView>
    <Authorized>
        <div class="container">
        <div class="ks-page-content">
            <div class="ks-page-content-body">
                <div class="ks-messenger">
                    <div class="ks-discussions">
                        <div class="ks-search">
                            <div class="input-icon icon-right icon icon-lg icon-color-primary">
                                <input id="input-group-icon-text" type="text" class="form-control" placeholder="Search" @bind-value="SearchedUser" 
                                    @bind-value:event="oninput" @onkeyup="async () => await SearchChangedAsync()">
                                <span class="icon-addon">
                                    <span class="la la-search"></span>
                                </span>
                            </div>
                        </div>
                        <div class="ks-body ks-scrollable jspScrollable" data-auto-height="" style="height: 400px; overflow-y: auto; padding: 0px; width: 339px;" tabindex="0">

                            <div class="jspContainer" style="width: 339px; height: 550px;">
                                <div class="jspPane" style="padding: 0px; top: 0px; width: 329px;">
                                    <ul class="ks-items">
                                    @if (Dialogs != null)
                                    {
                                        @foreach (var dialog in Dialogs)
                                        {
                                            <Front.Components.Contact UserName="@dialog.UserName"></Front.Components.Contact>
                                        }
                                    }
                                    @foreach (var user in SearchUserResponse.SearchUserResults)
                                    {
                                        <Front.Components.Contact UserName="@user.UserName"></Front.Components.Contact>
                                    }
                                    </ul>
                                </div>
                                <div class="jspVerticalBar">
                                    <div class="jspCap jspCapTop"></div>
                                    <div class="jspTrack" style="height: 550px;">
                                        <div class="jspDrag" style="height: 261px;">
                                            <div class="jspDragTop"></div>
                                            <div class="jspDragBottom"></div>
                                        </div>
                                    </div>
                                    <div class="jspCap jspCapBottom"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @Body
                </div>
            </div>
        </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container">
            @Body
        </div>
    </NotAuthorized>
</AuthorizeView>
@code{

    private List<GetDialogResponse.Dialog> Dialogs { get; set; }
    private string SearchedUser { get; set; }

    private SearchUserResponse SearchUserResponse = new SearchUserResponse();

    private async Task SearchChangedAsync()
    {
        SearchUserResponse.SearchUserResults = new List<SearchUserModel>();
        var response = await _searchClient.SearchUserByUserNameAsync(SearchedUser);
        if (response.IsSucess)
        {
            SearchUserResponse = response.SucessResponse.Response;
        }
    }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var user = await _authStateProvider.GetAuthenticationStateAsync();
        if (user.User.Identity.IsAuthenticated)
        {
            Dialogs = await _dialogManagerService.GetDialogsAsync();
        }
        else
        {
            _navigationManager.NavigateTo("/signin");
        }
     
    }
}